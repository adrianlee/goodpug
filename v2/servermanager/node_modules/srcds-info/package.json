{
  "author": {
    "name": "David Banham",
    "email": "david@pinion.gg",
    "url": "http://pinion.gg"
  },
  "name": "srcds-info",
  "description": "A tool to query Source based game servers",
  "version": "0.1.1",
  "homepage": "https://github.com/PinionTech/srcds-info",
  "repository": {
    "type": "git",
    "url": "git://github.com/PinionTech/srcds-info.git"
  },
  "main": "./main.js",
  "engines": {
    "node": ">=0.6.11"
  },
  "dependencies": {
    "packet": "0.0.3"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "scripts": {
    "test": "node ./test.js"
  },
  "readme": "# liverail-api \n\n## Purpose\n\nThis is a node interface to the protocol for querying Source based servers. More information on the protocol can be found here:\n\nhttps://developer.valvesoftware.com/wiki/Server_Queries\n\nIt currently only supports the A2S\\_INFO method, which is really the guts of it. If you have a need for A2S\\_PLAYER feel free to add it in and shoot us a pull request. If that's beyond you, feel free to let us know and we may add it.\n\nCreated by [Pinion.](http://pinion.gg/)\n\n## Installation\n\nnpm install srcds-info\n\n## Demo\n\n```javascript\nvar srcds = require('srcds-info');\n\nclient = srcds('27.50.71.3', 21045);\n\nclient.info('203.217.24.85', 27017, function(err, info) {\n\tif (err) {\n        \tconsole.error(err)\n\t}\n\telse {\n\t\tconsole.log(info);\n\t}\n\tclient.close();\n});\n```\n\n## API\n\n### srcds(server, port[, options]); \nReturns a client object for querying. Options is optional. Currently the only option is \"timeout\" which lets you change how long to wait for a response before emitting an error. The default is 10 seconds.\n\n### client.info(callback);\nQueries the given server and calls the callback with either an information object or an error. The object has the following properties: \n{ ip: string,\n  port: number,\n  serverName: string,\n  map: string,\n  gameType: string,\n  gameName: string,\n  appID: number,\n  numPlayers: number,\n  maxPlayers: number,\n  numBots: number,\n  dedicated: string(dedicated, listen, SourceTV),\n  os: string(Linux, Windows),\n  pw: boolean,\n  secure: boolean }\n\nSometimes servers will send back a blank info response. This seems to be a protection against an old DOS attack. If a stripped packet is received, an 'error' will be returned with an object containing ip and port properties.\n\n### client.close()\n\nCleans up the connection associated with a client.\n",
  "_id": "srcds-info@0.1.1",
  "dist": {
    "shasum": "a12d355b8ff10979b5e564caeeddfb6631f87c51",
    "tarball": "http://registry.npmjs.org/srcds-info/-/srcds-info-0.1.1.tgz"
  },
  "_npmVersion": "1.1.61",
  "_npmUser": {
    "name": "sgentle",
    "email": "sam@samgentle.com"
  },
  "maintainers": [
    {
      "name": "davidbanham",
      "email": "david@banham.id.au"
    },
    {
      "name": "sgentle",
      "email": "sam@samgentle.com"
    }
  ],
  "directories": {},
  "_shasum": "a12d355b8ff10979b5e564caeeddfb6631f87c51",
  "_from": "srcds-info@",
  "_resolved": "https://registry.npmjs.org/srcds-info/-/srcds-info-0.1.1.tgz"
}
